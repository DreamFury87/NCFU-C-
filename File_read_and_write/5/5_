#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <string>
using namespace std;

struct Abiturient {
    string surname;
    string name;
    string patronymic;
    char gender;
    string nationality;
    string birthday;
    string address;
    vector<int> grades;
    int passing_score;
};

string format(string address) {
    int pos = address.find("_", 0);
    while (pos != string::npos) {
        address.replace(pos, 1, " ");
        pos = address.find("_", pos);        
    }
    return address;
}

string grades_str(vector<int> grades){
    string result = "";
    for (int i = 0; i < grades.size(); ++i) {        
        result.append(to_string(grades[i]));
        result += ' ';
    }
    return result;
}

string information(Abiturient ab){   
    ostringstream os;
    os << ab.surname << " " << ab.name << " " << ab.patronymic << " " << ab.gender <<
        " " << ab.nationality << " " << ab.birthday << " " << format(ab.address) <<
        " " << grades_str(ab.grades) << " " << ab.passing_score;  
    
    return os.str();
}

int main() {
    setlocale(LC_ALL, "Russian");
    system("chcp 1251");

    ifstream in("in.txt");
    ofstream out("out.txt");

    string line;
    vector<Abiturient> abiturients;
    Abiturient ab;

    if (in.is_open()) {
        while (getline(in, line)) {            
            istringstream iss(line);
            iss >> ab.surname >> ab.name >> ab.patronymic >> ab.gender >>
                ab.nationality >> ab.birthday >> ab.address;

            int grade;
            vector<int> grades;
            for(int i = 0; i < 5; ++i){
                iss >> grade;                
                grades.push_back(grade);
            }
            ab.grades = grades;
            iss >> ab.passing_score;
            abiturients.push_back(ab);
        }
    }

    for (auto elem : abiturients) {
        if(elem.passing_score > 4){            
            cout << information(elem) << endl;
            out << information(elem) << endl;
        }        
    }

    in.close();
    out.close();
    return 0;
}
