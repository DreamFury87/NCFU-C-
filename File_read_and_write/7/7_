#include <iostream>
#include <vector>
#include <fstream>
using namespace std;

struct Matrix{
    int row;
    int column;
    vector<vector<int>> arr;
};

vector<Matrix> read_matrix(string filename, int row = 3, int column = 3){
    ifstream in(filename);
    vector<Matrix> arr;
    vector<vector<int>> matrix(row, vector<int>(column));

    int i = 0, j = 0;
    while(in >> matrix[i][j]){
        if(j + 1 > column - 1 and i < row - 1)
        {
            i++;
            j = 0;
        }
        else if(j == column - 1 and i == row - 1)
        {
            arr.push_back(Matrix{row, column, matrix});
            i = 0;
            j = 0;
        }
        else
        {
            j++;
        }
    }
    in.close();
    return arr;
}

void print_matrix(Matrix matrix){
    for(int i = 0; i < matrix.row; ++i){
        for(int j = 0; j < matrix.column; ++j){
             cout << matrix.arr[i][j] << " ";
        }
        cout << endl;
    }
    cout << endl;
}

bool is_symmetric(Matrix matrix){
    for(int i = 0; i < matrix.row; ++i){
        for(int j = 0; j < matrix.column; ++j){
             if(matrix.arr[i][j]!=matrix.arr[j][i]) return false;
        }
    }
    return true;
}

void write_to_file(string filename, vector<Matrix> vec){
    ofstream output(filename);
    for(auto elem: vec){
        for(int i = 0; i < elem.row; ++i){
            for(int j = 0; j < elem.column; ++j){
                output << elem.arr[i][j] << " ";
            }
            output << endl;
        }
        output << endl;
    }
    output.close();
}
void print_file(string filename){
    ifstream in(filename);
    string line;
    while(getline(in, line)){
        cout << line << "\n";
    }
    in.close();
}

int main(){
    setlocale(LC_ALL, "Russian");
    vector<Matrix> arr;
    vector<Matrix> symmetric;
    vector<Matrix> normal;

    int row = 3, column = 3;

    cout << "Исходный файл: \n";
    arr = read_matrix("matrix.txt", row, column);

    for(auto elem: arr){
        if(is_symmetric(elem))
            symmetric.push_back(elem);
        else
            normal.push_back(elem);

        print_matrix(elem);
    }
    write_to_file("symmetric.txt", symmetric);
    write_to_file("normal.txt", normal);

    cout << "=============================== \n";

    cout << "Файл с симметричными матрицами: \n";
    print_file("symmetric.txt");
    cout << "=============================== \n";

    cout << "Файл с остальными матрицами: \n";
    print_file("normal.txt");
    cout << "=============================== \n";
    return 0;
}
