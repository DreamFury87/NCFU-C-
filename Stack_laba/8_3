#include <iostream>
#include <vector>
#include <stdexcept>

using namespace std;

class Queue {
private:
    const static int SIZE = 20;
    float q[SIZE];
    int head = -1, tail = -1;

public:
    float* get_head(){
        if (is_empty())
            throw out_of_range("Очередь пуста");

        return q + head;
    }

    float* get_tail(){
        if (is_empty())
            throw out_of_range("Очередь пуста");

        return q + tail;
    }

    bool is_full(){
        if(head == 0 && tail == SIZE - 1)
            return true;
        if(head == tail + 1)
            return true;
        return false;
    }

    bool is_empty(){
        if(head == -1)
            return true;
        else
            return false;
    }

    void enqueue(float val) {
        if(is_full()){
            throw out_of_range("Очередь заполнена");
        }
        if(head == -1) head = 0;
        tail = (tail + 1) % SIZE;
        q[tail] = val;
    }

    void dequeue() {
        if (is_empty()) {
            throw out_of_range("Очередь пуста");
        }
        if (head == tail){
            head = -1;
            tail = -1;
        }else{
            head = (head + 1) % SIZE;
        }
    }

    float front(){
        if (is_empty()) {
            throw out_of_range("Очередь пуста");
        }
        return q[head];
    }

    void print(){
        if (is_empty()) {
            throw out_of_range("Очередь пуста");
        }
        for(int i = head; i <= tail; ++i){
            cout << q[i] << " ";
        }
        cout << endl;
    }

    float summ(){
        float result = 0;
        if (is_empty()) {
            throw out_of_range("Очередь пуста");
        }
        for(int i = head; i <= tail; ++i){
            result += q[i];
        }
        cout << result;
    }
};

int main() {
    setlocale(LC_ALL, "Russian");
    Queue q1;
    Queue q2;

    for(int i = 1;i < 10; i += 2)
        q1.enqueue(i);

    for(int i = 2;i <= 10; i += 2)
        q2.enqueue(i);

    q1.print();
    q2.print();

    cout << "Head - " << q1.get_head() << " " << "Tail - " << q1.get_tail() << "\n";
    cout << "Head - " << q2.get_head() << " " << "Tail - " << q2.get_tail();
    return 0;
}
